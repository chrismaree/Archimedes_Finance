Contract GovernorConfig {
    
    /* Privileged functions: Governor (multisig EOA)  */

    /// @dev change lvUSD minter address
    ///
    /// @param newMinter address of new minter 
    function changeLvUsdMinterAddress(address newMinter) external;

    /// @dev update EOA of treasury. EOA is multi-sig.
    ///
    /// @param newTreasuryAddress new EOA address of treasury
    function changeTreasuryAddress(address newTreasuryAddress) external;
    
    /// @dev update GloablCollateralRate
    /// 
    /// @param newGloablCollateralRate new value to assign to GloablCollateralRate
    function changeGloablCollateralRate(uint256 newGloablCollateralRate) external;

    /// @dev update globalLiqudationThreshold
    ///
    /// @param newGlobalLiqudationThreshold new value to assign to globalLiqudationThreshold
    function changeGlobalLiqudationThreshold(uint256 newGlobalLiqudationThreshold) external;

    /// @dev update max allowed number of leverage cycles 
    ///
    /// @param newMaxLeverageCycles new vaule to assign to MaxLeverageCycles
    function changeMaxLeverageCycles(uint256 newMaxLeverageCycles) external;

    // @dev Mint more lvUSD and send it to OUSD/lvUSD vault to allow more leverage
    ///
    ///  call "mint" function of lvUSD contract, gets lvUSD back and sends it to the vault
    ///
    /// @param amount the amount of lvUSD to mint
    function increaseLvUSDCap(uint256 amount) external ;

    /// @dev change orginiation fee
    ///
    /// How much off principle is taken as protocol fees, each time lvUSD is borrowed
    /// Shoud emit an event
    /// 
    /// @param _fee in percentage 
    function changeOriginiationFee(uint256 _fee) external nonReentrant expectInitialized ;


    // EXCEPTION: NOT TIME LOCKED
    // Invoke liquidation (if meet requirements)
    function liqudatePosition(uint256 nftId) external;
    function liqudateAddresss(address addr) external;

    
}